trigger:
- master

pr:
- master

variables:
  coreDirectory: $(Build.SourcesDirectory)/packages/w3c-webdriver
  websiteDirectory: $(Build.SourcesDirectory)/packages/website

jobs:
- job: CodeCheck
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: NodeTool@0
    displayName: Install Node.js
    inputs:
      versionSpec: 12.x

  - script: npm install
    displayName: Install dependencies
    workingDirectory: $(coreDirectory)

  - script: npm run lint
    displayName: Lint
    workingDirectory: $(coreDirectory)

  - script: npm run typecheck
    displayName: Type Check
    workingDirectory: $(coreDirectory)

- template: azure-pipelines-template.yml
  parameters:
    name: Firefox
    vmImage: 'ubuntu-latest'
    nodeVersion: '8.x'
    browser: 'firefox'
    headless: 'true'

- template: azure-pipelines-template.yml
  parameters:
    name: Chrome
    vmImage: 'ubuntu-latest'
    nodeVersion: '12.x'
    browser: 'chrome'
    headless: 'true'
    preBuild:
      - script: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt update
          sudo apt install google-chrome-stable
        displayName: 'Install latest stable Chrome'

# - template: azure-pipelines-template.yml
#   parameters:
#     name: Safari
#     vmImage: 'macOS-latest'
#     nodeVersion: '10.x'
#     browser: 'safari'
#     preBuild:
#     - script: sudo safaridriver --enable
#       displayName: Configure Safari to Enable WebDriver Support

- template: azure-pipelines-template.yml
  parameters:
    name: Internet_Explorer
    vmImage: 'windows-latest'
    nodeVersion: '12.x'
    browser: 'internet-explorer'

# - template: azure-pipelines-template.yml
#   parameters:
#     name: BrowserStack_Firefox
#     vmImage: 'ubuntu-latest'
#     nodeVersion: '12.x'
#     browser: 'firefox'
#     browserStack: 'true'

- template: azure-pipelines-template.yml
  parameters:
    name: BrowserStack_Safari
    vmImage: 'ubuntu-latest'
    nodeVersion: '12.x'
    browser: 'safari'
    browserStack: 'true'

- job: Test
  dependsOn:
    - Firefox
    - Chrome
    # - Safari
    - Internet_Explorer
    - BrowserStack_Firefox
    # - BrowserStack_Safari
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: echo tests completed

- job: DeployWebsite
  dependsOn: Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: npm install
    displayName: Install core dependencies
    workingDirectory: $(coreDirectory)

  - script: npm install
    displayName: Install website dependencies
    workingDirectory: $(websiteDirectory)

  - script: npm run build
    displayName: Build
    workingDirectory: $(websiteDirectory)

  - task: DownloadSecureFile@1
    inputs:
      secureFile: deploy_key
    displayName: Get the deploy key

  - script: |
      git config --local user.name "Azure Pipelines"
      git config --local user.email "azuredevops@microsoft.com"
      mkdir ~/.ssh
      chmod 700 ~/.ssh
      mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    displayName: Add deployment key to keystore
    workingDirectory: $(websiteDirectory)

  - script: |
      git config --local user.name "Azure Pipelines"
      git config --local user.email "azuredevops@microsoft.com"
    displayName: Configure Git author
    workingDirectory: $(websiteDirectory)

  - script: npm run deploy
    displayName: Deploy
    workingDirectory: $(websiteDirectory)
