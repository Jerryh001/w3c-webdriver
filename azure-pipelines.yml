trigger:
- master

pr:
- master

variables:
  coreDirectory: $(Build.SourcesDirectory)/packages/w3c-webdriver
  websiteDirectory: $(Build.SourcesDirectory)/packages/website

jobs:
- job: CodeCheck
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: npm install
    displayName: Install dependencies
    workingDirectory: $(coreDirectory)

  - script: npm run lint
    displayName: Lint
    workingDirectory: $(coreDirectory)

  - script: npm run typecheck
    displayName: Type Check
    workingDirectory: $(coreDirectory)

- template: azure-pipelines-template.yml
  parameters:
    name: Firefox
    vmImage: 'ubuntu-16.04'
    nodeVersion: '8.x'
    browser: firefox-headless

- template: azure-pipelines-template.yml
  parameters:
    name: Chrome
    vmImage: 'ubuntu-16.04'
    nodeVersion: '12.x'
    browser: chrome-headless

- template: azure-pipelines-template.yml
  parameters:
    name: Safari
    vmImage: 'macOS-10.13'
    nodeVersion: '10.x'
    browser: safari
    preBuild:
    - script: sudo safaridriver --enable
      displayName: Configure Safari to Enable WebDriver Support

- template: azure-pipelines-template.yml
  parameters:
    name: Internet_Explorer
    vmImage: 'vs2017-win2016'
    nodeVersion: '12.x'
    browser: internet-explorer

- template: azure-pipelines-template.yml
  parameters:
    name: BrowserStack
    vmImage: 'ubuntu-16.04'
    nodeVersion: '12.x'
    browser: browserstack

- job: Test
  dependsOn:
    - Firefox
    - Chrome
    - Safari
    - Internet_Explorer
    - BrowserStack
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo tests completed

- job: DeployWebsite
  dependsOn: Test
  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: npm install
    displayName: Install core dependencies
    workingDirectory: $(coreDirectory)

  - script: npm install
    displayName: Install website dependencies
    workingDirectory: $(websiteDirectory)

  - script: npm run build
    displayName: Build
    workingDirectory: $(websiteDirectory)

  - script: npm run deploy
    displayName: Deploy
    workingDirectory: $(websiteDirectory)
