parameters:
  name: ''
  vmImage: ''
  nodeVersion: ''
  preBuild: []
  testCommand: ''
  browser: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  dependsOn: CodeCheck
  steps:
  - script: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt update
        sudo apt install google-chrome-stable
    condition: eq(variables['Agent.OS'], 'linux')
    displayName: 'TOOLS: install google-chrome-stable'
  - task: NodeTool@0
    displayName: Install Node.js
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}

  - ${{ parameters.preBuild }}

  - script: npm install
    displayName: Install dependencies
    workingDirectory: $(coreDirectory)

  - script: npm test -- --ci --runInBand --coverage --no-colors --coverage-reporters=cobertura
    displayName: Test
    workingDirectory: $(coreDirectory)
    env:
      JUNIT_REPORT: 'true'
      BROWSER: ${{ parameters.browser }}
      BROWSERSTACK_USERNAME: $(browserstack.user)
      BROWSERSTACK_ACCESS_KEY: $(browserstack.key)

  - task: PublishTestResults@2
    displayName: Publish Jest Test Results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '*.junit.xml'
      searchFolder: $(coreDirectory)
      mergeTestResults: true
      testRunTitle: 'Test Results (${{ parameters.browser }})'

  - task: PublishCodeCoverageResults@1
    displayName: Publish Jest Test Coverage
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: $(coreDirectory)/coverage/cobertura-coverage.xml
      reportDirectory: $(coreDirectory)/coverage
      failIfCoverageEmpty: true
