parameters:
  name: ''
  vmImage: ''
  nodeVersion: ''
  preBuild: []
  testCommand: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  dependsOn: CodeCheck
  steps:
  - task: NodeTool@0
    displayName: Install Node.js
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}

  - ${{ parameters.preBuild }}

  - script: npm install
    displayName: Install dependencies
    workingDirectory: $(coreDirectory)

  - script: ${{ parameters.testCommand }}
    displayName: Test
    workingDirectory: $(coreDirectory)
    env:
      BROWSERSTACK_USERNAME: $(browserstack.user)
      BROWSERSTACK_ACCESS_KEY: $(browserstack.key)

  - task: PublishTestResults@2
    displayName: Publish Jest Test Results
    inputs:
      testResultsFormat: 'JUnit',
      testResultsFiles: 'junit.xml',
      searchFolder: $(coreDirectory)
      mergeTestResults: true

  - task: PublishCodeCoverageResults@1
    displayName: Publish Jest Test Coverage
    inputs:
      codeCoverageTool: 'cobertura',
      summaryFileLocation: $(coreDirectory)/coverage/cobertura-coverage.xml
      reportDirectory: $(coreDirectory)/coverage
      failIfCoverageEmpty: true
