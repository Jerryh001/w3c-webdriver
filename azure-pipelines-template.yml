parameters:
  name: ''
  vmImage: ''
  nodeVersion: ''
  preBuild: []
  testCommand: ''
  browser: ''
  headless: ''
  browserStack: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  dependsOn: CodeCheck
  steps:
  - task: NodeTool@0
    displayName: Install Node.js
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}

  - ${{ parameters.preBuild }}

  - script: npm install
    displayName: Install dependencies
    workingDirectory: $(coreDirectory)

  - script: npm test -- --reporter mocha-junit-reporter
    displayName: Test
    workingDirectory: $(coreDirectory)
    env:
      MOCHA_FILE: '${{ parameters.name }}.junit.xml'
      BROWSER: ${{ parameters.browser }}
      HEADLESS: ${{ parameters.headless }}
      BROWSERSTACK: ${{ parameters.browserStack }}
      BROWSERSTACK_USERNAME: $(browserstack.user)
      BROWSERSTACK_ACCESS_KEY: $(browserstack.key)

  - task: PublishTestResults@2
    displayName: Publish Jest Test Results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '*.junit.xml'
      searchFolder: $(coreDirectory)
      mergeTestResults: true
      testRunTitle: 'Test Results (${{ parameters.browser }})'

  # - task: PublishCodeCoverageResults@1
  #   displayName: Publish Jest Test Coverage
  #   inputs:
  #     codeCoverageTool: 'cobertura'
  #     summaryFileLocation: $(coreDirectory)/coverage/cobertura-coverage.xml
  #     reportDirectory: $(coreDirectory)/coverage
  #     failIfCoverageEmpty: true
